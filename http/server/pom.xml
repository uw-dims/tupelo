<?xml version="1.0" encoding="UTF-8"?>

<!--
Copyright Â© 2015, University of Washington
All rights reserved.
 *
Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are
met:

    * Redistributions of source code must retain the above copyright
      notice, this list of conditions and the following disclaimer.

    * Redistributions in binary form must reproduce the above
      copyright notice, this list of conditions and the following
      disclaimer in the documentation and/or other materials provided
      with the distribution.

    * Neither the name of the University of Washington nor the names
      of its contributors may be used to endorse or promote products
      derived from this software without specific prior written
      permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
"AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL UNIVERSITY OF
WASHINGTON BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
			     http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>edu.uw.apl</groupId>
		<artifactId>tupelo-http-parent</artifactId>
		<version>1.2.1-SNAPSHOT</version>
	</parent>

	<groupId>edu.uw.apl</groupId>
	<artifactId>tupelo-http-server</artifactId>
	<version>1.2.1-SNAPSHOT</version>
	<packaging>war</packaging>
	<name>Tupelo Disk Management - Http Store Servlet</name>

	<dependencies>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>tupelo-http-client</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>tupelo-store-filesys</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>tupelo-store-tools</artifactId>
			<version>${project.version}</version>
		</dependency>

		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>tupelo-amqp-server</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>tupelo-logging</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>tupelo-utils</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.4</version>
			<scope>provided</scope>
		</dependency>
	</dependencies>

	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
		<filters>
			<filter>filter.properties</filter>
		</filters>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.5</version>
				<configuration>
					<archive>
						<manifest>
							<addDefaultImplementationEntries>
								true
							</addDefaultImplementationEntries>
							<addDefaultSpecificationEntries>
								true
							</addDefaultSpecificationEntries>
						</manifest>
					</archive>
				</configuration>
			</plugin>

		</plugins>
	</build>

    <!--
    Add a profile so that we can run 'mvn package -Prun-server'  in the root directory, and it runs.

    The downside of having the Jetty plugin set up for 'mvn jetty:run' in this sub-project's directory
    is that it can not find the other sub-projects that it depends on, so you first need to 'mvn install'
    all of Tupelo in order to run. Using a profile makes maven load all of the sub-projects, so you don't
    have to install everything.

    See http://stackoverflow.com/a/5941106
    -->
	<profiles>
		<profile>
			<id>run-server</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.mortbay.jetty</groupId>
						<artifactId>jetty-maven-plugin</artifactId>
						<version>8.1.16.v20140903</version>
						<configuration>
							<connectors>
								<connector implementation="org.eclipse.jetty.server.nio.SelectChannelConnector">
									<port>8888</port>
									<maxIdleTime>360000</maxIdleTime>
								</connector>
								<connector implementation="org.eclipse.jetty.server.nio.SelectChannelConnector">
									<port>8889</port>
									<maxIdleTime>360000</maxIdleTime>
								</connector>
							</connectors>
							<!-- The override.xml lets us set a context init param for dataroot -->
							<overrideWebXml>
								src/main/resources/jetty-override-web.xml
							</overrideWebXml>
							<contextPath>tupelo</contextPath>
							<reload>manual</reload>
						</configuration>
						<executions>
							<execution>
								<id>run-server</id>
								<phase>package</phase>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>